@{
  Layout = "_Layout";
}

@model UniversityRegistrar.Models.Student
@using UniversityRegistrar.Models

<h2>@Html.DisplayFor(model => model.Name) | Department: @Html.DisplayFor(model => model.Department.DepartmentName) </h2>
<hr />
<h4>@Html.DisplayNameFor(model => model.DateOfEnrollment): @Html.DisplayFor(model => model.DateOfEnrollment)</h4>

@if(@Model.Courses.Count == 0)
{
  <p>This student has no courses</p>
}
else
{
  <ul>
  @foreach (CourseStudent courseStudent in Model.Courses)
  {
    <li>@courseStudent.Course.CourseName | @courseStudent.Course.CourseNumber</li>
    @if (courseStudent.Completed == true)
    {
      <p>COMPLETE</p>
    }
    @using (Html.BeginForm("CompleteCourse", "Students"))
    {
      @Html.Hidden("CourseStudentId", @courseStudent.CourseStudentId)
      <input type="submit" value="Completed"/>
    }
    @using (Html.BeginForm("DeleteCourse", "Students"))
    {
      @Html.Hidden("CourseStudentId", @courseStudent.CourseStudentId)
      <input type="submit" value="Remove"/>
    }
  }
  </ul>
}

<p>@Html.ActionLink("Edit Student", "Edit", new { id = Model.StudentId })</p>
<p>@Html.ActionLink("Delete Student", "Delete", new { id = Model.StudentId })</p>
<p>@Html.ActionLink("Add Course", "AddCourse",  new { id = Model.StudentId })</p>
<p>@Html.ActionLink("Add Major", "AddDepartment", new { id = Model.StudentId })</p>
<p>@Html.ActionLink("Back to List of Students", "Index")</p>